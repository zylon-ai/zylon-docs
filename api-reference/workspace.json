{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "API",
    "version" : "latest"
  },
  "externalDocs" : {
    "url" : "/"
  },
  "servers" : [ ],
  "tags" : [ ],
  "paths" : {
    "/v1/auth/google/login" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "OpenID login for Google",
        "description" : "Initiates the OpenID login flow for the specified provider.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/auth/google/callback" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "OpenID callback for Google",
        "description" : "Handles the OpenID callback after authentication with the specified provider.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/auth/microsoft/login" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "OpenID login for Microsoft",
        "description" : "Initiates the OpenID login flow for the specified provider.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/auth/microsoft/callback" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "OpenID callback for Microsoft",
        "description" : "Handles the OpenID callback after authentication with the specified provider.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/auth/login" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "Login with credentials",
        "description" : "Login to the account using email and password. This will create a session for the user.",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "Login with email and password",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.account.LoginWithCredentialsDTO"
              },
              "examples" : {
                "example" : {
                  "value" : {
                    "email" : "admin@zylon.ai",
                    "password" : "password123"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successful login",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.account.AccountDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/auth/register" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "Register a new account",
        "description" : "Register a new account with email and password.",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "Create a new account with email and password",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.account.CreateCredentialsAccountDTO"
              },
              "examples" : {
                "example" : {
                  "value" : {
                    "email" : "admin",
                    "password" : "password123"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successful account creation",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.account.AccountDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/auth/logout" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "Logout",
        "description" : "Clear the current session and logout the user.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful logout",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "title" : "String"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/account/token" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "Get API tokens",
        "description" : "Get all API tokens for the current user",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "List of API tokens",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ai.zylon.backend.core.authentication.token.ApiTokenDTO"
                  },
                  "title" : "ArrayList<ApiTokenDTO>"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Create API token",
        "description" : "Create a new API token for the current user. Only the hash of the token is stored in the database. The token in the response will be shared as clear text only once as the responseof this operation.",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The details of the API token to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.core.authentication.token.CreateApiTokenDTO"
              },
              "examples" : {
                "example" : {
                  "value" : {
                    "revoke_existing" : false,
                    "valid_until" : "2026-07-23T11:43:27.995087Z"
                  }
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "The created API token",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.core.authentication.token.ApiTokenDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "account" ],
        "summary" : "Delete an API token",
        "description" : "Delete an API token by its hash",
        "parameters" : [ {
          "name" : "token",
          "in" : "query",
          "description" : "The hash of the API token to delete",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Confirmation of token deletion",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "title" : "String"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/account/me" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "Get current user account",
        "description" : "Get the account details of the currently authenticated user",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The account details of the current user",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.account.AccountDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/account/organization" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "Get account organizations",
        "description" : "Get all organizations that the current user can access",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "List of organizations accessible by the current user",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ai.zylon.backend.server.app.account.AccountDTO"
                  },
                  "title" : "ArrayList<AccountDTO>"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/account/organization/{orgId}/join" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Join an organization by its ID.",
        "description" : "Allows the current user to join an organization if the organization allows auto-join and the user's email matches the organization's email regex.",
        "parameters" : [ {
          "name" : "orgId",
          "in" : "path",
          "description" : "The ID of the organization to join",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The user details after joining the organization",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/me" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Current user details",
        "description" : "Retrieve the details of the currently authenticated user.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the currently authenticated user",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/user/{userId}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get user details",
        "description" : "Retrieve the details of a specific user by their ID.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of the user to retrieve",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the details of the specified user",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Update user information",
        "description" : "Update the details of a user, including optional profile picture upload.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of the user to update",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Updated user information. Supports both JSON and multipart/form-data for profile picture uploads",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UpdateUserDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Returns the updated user details",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/user" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get organization users",
        "description" : "Retrieve a paginated list of users in the organization",
        "parameters" : [ {
          "name" : "state",
          "in" : "query",
          "description" : "Comma-separated list of user states to filter by. Options: Active, Inactive. Default is Active,Inactive",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The absolute page number to fetch (1-based).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "Number of items per page. Default is 20.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "page_order",
          "in" : "query",
          "description" : "Sort order for pagination. Options: ASC, DESC. Default is ASC.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor or value to paginate after (for relative pagination).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "The cursor or value to paginate before (for relative pagination).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "Limits the result to the first N items (after cursor).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "last",
          "in" : "query",
          "description" : "Limits the result to the last N items (before cursor).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "total_count",
          "in" : "query",
          "description" : "Include the total count in the response.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a paginated list of users in the organization",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.core.http.PageDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Add a user to the organization",
        "description" : "Create a new user and add them to the current organization.",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "User information to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.CreateUserDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Returns the created user details",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/user/{userId}/deactivate" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Deactivate user",
        "description" : "Set a user's state to inactive, effectively deactivating them.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of the user to deactivate",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the deactivated user details",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/user/{userId}/activate" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Reactivate a user",
        "description" : "Set a user's state to active, effectively reactivating them.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of the user to activate",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the activated user details",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/user/{userId}/project" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get visible projects for a user",
        "description" : "Retrieve a paginated list of projects that are visible to the specified user.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of the user to get projects for",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The absolute page number to fetch (1-based).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "Number of items per page. Default is 20.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "page_order",
          "in" : "query",
          "description" : "Sort order for pagination. Options: ASC, DESC. Default is ASC.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor or value to paginate after (for relative pagination).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "The cursor or value to paginate before (for relative pagination).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "Limits the result to the first N items (after cursor).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "last",
          "in" : "query",
          "description" : "Limits the result to the last N items (before cursor).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "total_count",
          "in" : "query",
          "description" : "Include the total count in the response.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a paginated list of projects visible to the user",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.core.http.PageDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/user/{userId}/latest-artifacts" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get latest updated artifacts for a user",
        "description" : "Retrieve a list of the latest updated artifacts for the specified user.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of the user to get artifacts for",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "latest",
          "in" : "query",
          "description" : "Number of latest artifacts to return. Default is 3",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of the latest updated artifacts for the user",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactDTO"
                  },
                  "title" : "ArrayList<ArtifactDTO>"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/user/integrations" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get integrations for the current user",
        "description" : "Retrieve a list of integrations configured for the current user.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of user integrations with their configurations",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ai.zylon.backend.server.app.integration.UserIntegrationDTO"
                  },
                  "title" : "ArrayList<UserIntegrationDTO>"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/organization" : {
      "get" : {
        "tags" : [ "user-organization" ],
        "summary" : "Get the current user's organization",
        "description" : "Retrieve the organization details for the currently authenticated user.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "user-organization" ],
        "summary" : "Update the current user's organization",
        "description" : "Update the organization details for the currently authenticated user. This endpoint supports both JSON and multipart form data formats.",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.organization.UpdateOrgDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/leave" : {
      "post" : {
        "tags" : [ "project" ],
        "summary" : "Leaves a project",
        "description" : "Allows a user to leave a project they are currently a member of. This will remove them from the project and revoke their access.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to leave",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/transfer" : {
      "post" : {
        "tags" : [ "project" ],
        "summary" : "Transfer project ownership",
        "description" : "Transfer the ownership of a project to another user. The new owner must be a member of the project.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to transfer",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Contains the ID's of both the actual(old) and the next(new) project owner",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.TransferProjectDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}" : {
      "get" : {
        "tags" : [ "project" ],
        "summary" : "Get project details",
        "description" : "Retrieve detailed information about a specific project, including its members and settings.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to get audit events for",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "project" ],
        "summary" : "Update a project",
        "description" : "Update the details of an existing project. Only the owner or members with appropriate permissions can update a project.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to update",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "project" ],
        "summary" : "Delete a project",
        "description" : "Permanently delete a project and all its associated data, including vectors, artifacts, and interactions. kotlin.Unit",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to delete",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "project" ],
        "summary" : "Update a project",
        "description" : "Update the details of an existing project. Only the owner or members with appropriate permissions can update a project.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to update",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project" : {
      "post" : {
        "tags" : [ "project" ],
        "summary" : "Creates a new project",
        "description" : "Create a new project with the specified details. The user creating the project will automatically become the owner.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/chat" : {
      "post" : {
        "tags" : [ "project" ],
        "summary" : "Create a ephemeral chat with a project",
        "description" : "Create a non-persistent chat with a project, which can be used for quick discussions or questions related to the project.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Details of the chat to open with the project",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.ProjectChatDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/member" : {
      "get" : {
        "tags" : [ "project-member" ],
        "summary" : "Get the members of a project",
        "description" : "Retrieve a paginated list of members for a specific project",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to get members for",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The absolute page number to fetch (1-based).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "Number of items per page. Default is 20.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "page_order",
          "in" : "query",
          "description" : "Sort order for pagination. Options: ASC, DESC. Default is ASC.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor or value to paginate after (for relative pagination).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "The cursor or value to paginate before (for relative pagination).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "Limits the result to the first N items (after cursor).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "last",
          "in" : "query",
          "description" : "Limits the result to the last N items (before cursor).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "total_count",
          "in" : "query",
          "description" : "Include the total count in the response.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a paginated list of project members",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.core.http.PageDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "project-member" ],
        "summary" : "Update project member",
        "description" : "Update the roles of members in a specific project",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to update members in",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "The updated member information",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.UpdateProjectMembersDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Returns the updated project members",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.ProjectMemberDTO"
                  },
                  "title" : "ArrayList<ProjectMemberDTO>"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "project-member" ],
        "summary" : "Add a member to a project",
        "description" : "Add one or more members to a specific project",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to add members to",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "The members to add to the project",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.AddProjectMembersDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Returns the added project members",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.ProjectMemberDTO"
                  },
                  "title" : "ArrayList<ProjectMemberDTO>"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/member/{userId}" : {
      "get" : {
        "tags" : [ "project-member" ],
        "summary" : "Get project member details",
        "description" : "Retrieve details of a specific project member by user ID",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of the user to get member information for",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the project member details",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.ProjectMemberDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "project-member" ],
        "summary" : "Remove project member",
        "description" : "Remove a member from a specific project by user ID",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to remove the member from",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of the user to remove from the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the removed project member details",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.ProjectMemberDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/interaction/{interactionId}" : {
      "get" : {
        "tags" : [ "interaction" ],
        "summary" : "Get interaction",
        "description" : "Get a specific interaction by its ID within a project",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project containing the interaction",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "interactionId",
          "in" : "path",
          "description" : "The ID of the interaction to retrieve",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "interaction" ],
        "summary" : "Delete interaction",
        "description" : "Delete a specific interaction by its ID within a project",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project containing the interaction",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "interactionId",
          "in" : "path",
          "description" : "The ID of the interaction to delete",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/interaction" : {
      "get" : {
        "tags" : [ "interaction" ],
        "summary" : "Get interactions within a project",
        "description" : "Get a paginated list of interactions within a project",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to retrieve interactions from",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.interaction.InteractionIncludeFields"
            },
            "title" : "ArrayList<InteractionIncludeFields>"
          }
        }, {
          "name" : "pageParams",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "object",
            "title" : "*"
          }
        }, {
          "name" : "threadId",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "NodeId"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "interaction" ],
        "summary" : "Create a new interaction",
        "description" : "Create a new interaction within a project and stream the result",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to create the interaction in",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Details of the interaction to create",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.interaction.CreateInteractionDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/chat" : {
      "post" : {
        "tags" : [ "chat" ],
        "summary" : "Create a non-persistent chat for simple inferences",
        "description" : "Routes for chat interactions",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.koala.privategpt.ChatRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/thread" : {
      "get" : {
        "tags" : [ "threads" ],
        "summary" : "Get project threads",
        "description" : "Routes for managing threads",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "A list of states to filter the threads split by comma",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.thread.ThreadState"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "A list of extra fields to include on the threads split by comma",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.thread.ThreadIncludeFields"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The absolute page number to fetch (1-based).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "Number of items per page. Default is 20.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "page_order",
          "in" : "query",
          "description" : "Sort order for pagination. Options: ASC, DESC. Default is ASC.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor or value to paginate after (for relative pagination).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "The cursor or value to paginate before (for relative pagination).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "Limits the result to the first N items (after cursor).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "last",
          "in" : "query",
          "description" : "Limits the result to the last N items (before cursor).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "total_count",
          "in" : "query",
          "description" : "Include the total count in the response.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "threads" ],
        "summary" : "Creates a new thread",
        "description" : "Routes for managing threads",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Details of the thread to be created",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.thread.CreateThreadDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/thread/{threadId}" : {
      "get" : {
        "tags" : [ "threads" ],
        "summary" : "Get thread details",
        "description" : "Routes for managing threads",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "threadId",
          "in" : "path",
          "description" : "The ID of the threadId to be deleted",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "threads" ],
        "summary" : "Updates a thread",
        "description" : "Routes for managing threads",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "threadId",
          "in" : "path",
          "description" : "The ID of the threadId to be deleted",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "The data to be updated on the thread",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.thread.UpdateThreadDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : { },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "threads" ],
        "summary" : "Delete a thread",
        "description" : "Routes for managing threads",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "threadId",
          "in" : "path",
          "description" : "The ID of the threadId to be deleted",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/thread/interaction" : {
      "post" : {
        "tags" : [ "threads" ],
        "summary" : "Create a thread and interaction",
        "description" : "Creates a new thread and interaction in the project, and streams the interaction as a Server-Sent Event (SSE).",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "Details of the thread to be created",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.thread.CreateThreadDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/artifact" : {
      "get" : {
        "tags" : [ "artifacts" ],
        "summary" : "Get project artifacts",
        "description" : "Retrieve a paginated list of artifacts for a specific project, with optional filtering and sorting parameters.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project.",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "A comma-separated list of artifact states to filter by. Example: 'Published,Processing'. If not provided, defaults to [Published, Processing].",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactState"
          }
        }, {
          "name" : "ingest_status",
          "in" : "query",
          "description" : "A comma-separated list of artifact ingest statuses to filter by. Example: 'Ingested,Failed'. If not provided, defaults to all statuses.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactIngestStatus"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "A comma-separated list of artifact types to filter by. Example: 'Document,Image'.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactType"
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "The field by which to order the results. Example: 'createdAt', 'name'.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.QueryOrderBy"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "The sort order for the results: ASC for ascending, DESC for descending. Defaults to ASC.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/org.jetbrains.exposed.sql.SortOrder"
          }
        }, {
          "name" : "created_by",
          "in" : "query",
          "description" : "Filter results by the user ID who created the artifact.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "NodeId"
          }
        }, {
          "name" : "filter_by_text",
          "in" : "query",
          "description" : "Text to filter artifacts by. Performs a text search over artifacts.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "parent_id",
          "in" : "query",
          "description" : "Filter results by parent artifact ID.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "NodeId"
          }
        }, {
          "name" : "filter_by_parent",
          "in" : "query",
          "description" : "If true, only artifacts with a parent ID will be included. Defaults to false.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        }, {
          "name" : "sub_type",
          "in" : "query",
          "description" : "A comma-separated list of artifact sub-types to filter by. Example: 'Image,Report'.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactType"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The absolute page number to fetch (1-based).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "Number of items per page. Default is 20.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "page_order",
          "in" : "query",
          "description" : "Sort order for pagination. Options: ASC, DESC. Default is ASC.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor or value to paginate after (for relative pagination).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "The cursor or value to paginate before (for relative pagination).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "Limits the result to the first N items (after cursor).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "last",
          "in" : "query",
          "description" : "Limits the result to the last N items (before cursor).",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        }, {
          "name" : "total_count",
          "in" : "query",
          "description" : "Include the total count in the response.",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a paginated list of artifacts for the specified project",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.core.http.PageDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "artifacts" ],
        "summary" : "Create an artifact",
        "description" : "Create a new artifact and schedule it for processing.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "requestBody" : {
          "description" : "The artifact to be created. This body can be submitted as either multipart/form-data (when including a file) or as JSON. Required fields include 'type' (artifact type) and 'name'. The 'config' field must contain a type-specific configuration object, matching the structure expected for the given artifact type. When uploading a file, include the file binary in 'fileData' (multipart only). Other optional fields allow setting metadata, description, parent relationships, external URLs, and ingestion behavior. Extra metadata (in 'metadata') is used internally and not stored persistently.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.CreateArtifactDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Returns the created artifact details",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/artifact/{artifactId}" : {
      "get" : {
        "tags" : [ "artifacts" ],
        "summary" : "Get artifact details",
        "description" : "Retrieves detailed information about a specific artifact by its ID, including metadata, references, and optionally the content.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "artifactId",
          "in" : "path",
          "description" : "The ID of the artifact to retrieve",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        }, {
          "name" : "include_content",
          "in" : "path",
          "description" : "If true returns the content of the artifact",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the artifact details",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "artifacts" ],
        "summary" : "Update artifact",
        "description" : "Update the metadata of an existing artifact. This does not change the content of the artifact, but allows updating fields like name, description, metadata, and other properties.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "artifactId",
          "in" : "path",
          "description" : "The ID of the artifact data to be updated",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The fields of the artifact to be updated",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.UpdateArtifactDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Returns the updated artifact details",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "artifacts" ],
        "summary" : "Delete artifact",
        "description" : "Permanently delete an artifact and all its associated data, including vectors, interactions, and metadata. This action cannot be undone.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "artifactId",
          "in" : "path",
          "description" : "The ID of the artifact data to be updated",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the deleted artifact details",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/artifact/{artifactId}/download" : {
      "get" : {
        "tags" : [ "artifacts" ],
        "summary" : "Get secure download URL for an artifact",
        "description" : "Retrieves a secure download URL for an artifact by its ID. This URL can be used to download the artifact content directly and is's only valid for a limited time.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "artifactId",
          "in" : "path",
          "description" : "The ID of the artifact to download",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a secure URL to download the artifact content",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "title" : "String"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/artifact/{artifactId}/content" : {
      "put" : {
        "tags" : [ "artifacts" ],
        "summary" : "Update artifact content",
        "description" : "Updates the content of an existing artifact. This is typically used to replace the file or data associated with the artifact.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "artifactId",
          "in" : "path",
          "description" : "The ID of the artifact to update",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the updated artifact details",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/artifact/{artifactId}/parsed-content" : {
      "get" : {
        "tags" : [ "artifacts" ],
        "summary" : "Get parsed content of an artifact",
        "description" : "Retrieves the parsed content of an artifact by its ID. The parsed content is the way LLMs will use the artifact information, usuallyas markdown text.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "artifactId",
          "in" : "path",
          "description" : "The ID of the artifact data to retrieve",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the parsed content of the artifact as a string in markdown format",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "title" : "String"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/artifact/{artifactId}/sync" : {
      "post" : {
        "tags" : [ "artifacts" ],
        "summary" : "Synchronize artifact",
        "description" : "Synchronizes an artifact with the latest data from its source. Generally only used for external integrations that support live updates.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "artifactId",
          "in" : "path",
          "description" : "The ID of the artifact data to be updated",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/feedback" : {
      "post" : {
        "tags" : [ "feedback" ],
        "summary" : "Create feedback",
        "description" : "Create feedback for a target node",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ai.zylon.backend.server.app.feedback.CreateFeedbackDTO"
              }
            }
          },
          "required" : false
        },
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/feedback/{targetId}" : {
      "get" : {
        "tags" : [ "feedback" ],
        "summary" : "Get feedback",
        "description" : "Get feedback for a target node",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "path",
          "description" : "The ID of the target node to get feedback for",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/audit" : {
      "get" : {
        "tags" : [ "audit" ],
        "summary" : "Get audit events",
        "description" : "Retrieve all audit events in the system. This will include all artifacts and projects in the search.",
        "parameters" : [ {
          "name" : "actions",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "ArrayList<String>"
          }
        }, {
          "name" : "createdBy",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "NodeId"
            },
            "title" : "ArrayList<NodeId>"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.audit.AuditQueryIncludeFields"
            },
            "title" : "ArrayList<AuditQueryIncludeFields>"
          }
        }, {
          "name" : "nodeIds",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "NodeId"
            },
            "title" : "ArrayList<NodeId>"
          }
        }, {
          "name" : "pageParams",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "object",
            "title" : "*"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/audit" : {
      "get" : {
        "tags" : [ "audit" ],
        "summary" : "Get audit events",
        "description" : "Retrieve audit events for a specific project. This will include all artifacts and the project itself in the search.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project to get audit events for",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "actions",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "ArrayList<String>"
          }
        }, {
          "name" : "createdBy",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "NodeId"
            },
            "title" : "ArrayList<NodeId>"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.audit.AuditQueryIncludeFields"
            },
            "title" : "ArrayList<AuditQueryIncludeFields>"
          }
        }, {
          "name" : "nodeIds",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "NodeId"
            },
            "title" : "ArrayList<NodeId>"
          }
        }, {
          "name" : "pageParams",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "object",
            "title" : "*"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/info/{userId}" : {
      "get" : {
        "tags" : [ "project", "user-project-info" ],
        "summary" : "Get user project info details",
        "description" : "Retrieve information about a user's interaction with a specific project, including whether the project is pinned by the user.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of the userId to get info about the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/project/{projectId}/info" : {
      "post" : {
        "tags" : [ "project", "user-project-info" ],
        "summary" : "Update project user info",
        "description" : "Update or create user project info, such as pinning the project.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The ID of the project",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/organization/analytics/totals" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "Get total analytics metrics for the organization",
        "description" : "Routes for organization analytics and metrics",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns total analytics metrics for the organization",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.analytics.AnalyticsTotalsDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/organization/analytics/ranking/active-projects" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "Get ranking of most active projects in the organization",
        "description" : "Routes for organization analytics and metrics",
        "parameters" : [ {
          "name" : "start_date",
          "in" : "query",
          "description" : "Start date for the ranking period (timestamp in milliseconds)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "end_date",
          "in" : "query",
          "description" : "End date for the ranking period (timestamp in milliseconds)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of projects to return. Default is 5",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns ranking of most active projects in the organization",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ai.zylon.backend.server.app.analytics.RankingActiveProjectDTO"
                  },
                  "title" : "ArrayList<RankingActiveProjectDTO>"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/organization/analytics/ranking/active-users" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "Get ranking of most active users in the organization",
        "description" : "Routes for organization analytics and metrics",
        "parameters" : [ {
          "name" : "start_date",
          "in" : "query",
          "description" : "Start date for the ranking period (timestamp in milliseconds)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "end_date",
          "in" : "query",
          "description" : "End date for the ranking period (timestamp in milliseconds)",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of users to return. Default is 5",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns ranking of most active users in the organization",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ai.zylon.backend.server.app.analytics.RankingActiveUsersDTO"
                  },
                  "title" : "ArrayList<RankingActiveUsersDTO>"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/organization/analytics/timeseries" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "Get time series analytics data for the organization",
        "description" : "Routes for organization analytics and metrics",
        "parameters" : [ {
          "name" : "start_date",
          "in" : "query",
          "description" : "Start date for the time series (timestamp in milliseconds)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "end_date",
          "in" : "query",
          "description" : "End date for the time series (timestamp in milliseconds)",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type of analytics data. Options: thread, interactions, artifact_agent_flow, artifact_document",
          "required" : true,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns time series analytics data for the organization",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ai.zylon.backend.server.app.analytics.TimeseriesDTO"
                  },
                  "title" : "ArrayList<TimeseriesDTO>"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/resource/is-safe-to-modify" : {
      "get" : {
        "tags" : [ "resource" ],
        "summary" : "Check links",
        "description" : "This endpoint checks if the resource is safe to modify by verifying if there are any linked artifacts. It returns a boolean indicating whether the resource can be safely modified without affecting linked artifacts.",
        "parameters" : [ {
          "name" : "created_by",
          "in" : "query",
          "description" : "The user ID who created the artifacts to check",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "project_id",
          "in" : "query",
          "description" : "The project ID to check for linked artifacts",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        }, {
          "name" : "artifact_id",
          "in" : "query",
          "description" : "The artifact ID to check for linked artifacts",
          "required" : false,
          "deprecated" : false,
          "explode" : false,
          "schema" : {
            "type" : "string",
            "title" : "String"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Indicates whether the resource is safe to modify based on linked artifacts",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ai.zylon.backend.server.app.miscellaneous.ResourceIsSafeToModifyDTO"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/integration/confluence/{integrationId}/config" : {
      "get" : {
        "tags" : [ "integration" ],
        "summary" : "Integration config for Confluence",
        "description" : "Get the stored configuration for Confluence.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/confluence/{integrationId}/ingest" : {
      "post" : {
        "tags" : [ "integration" ],
        "summary" : "Ingest data from Confluence",
        "description" : "Ingest data into the system using the Confluence integration.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/sharepoint/{integrationId}/config" : {
      "get" : {
        "tags" : [ "integration" ],
        "summary" : "Integration config for SharePoint",
        "description" : "Get the stored configuration for SharePoint.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/sharepoint/{integrationId}/ingest" : {
      "post" : {
        "tags" : [ "integration" ],
        "summary" : "Ingest data from SharePoint",
        "description" : "Ingest data into the system using the SharePoint integration.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/filesystem/{integrationId}/config" : {
      "get" : {
        "tags" : [ "integration" ],
        "summary" : "Integration config for FileSystem",
        "description" : "Get the stored configuration for FileSystem.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/filesystem/{integrationId}/ingest" : {
      "post" : {
        "tags" : [ "integration" ],
        "summary" : "Ingest data from FileSystem",
        "description" : "Ingest data into the system using the FileSystem integration.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/claromentis/{integrationId}/config" : {
      "get" : {
        "tags" : [ "integration" ],
        "summary" : "Integration config for Claromentis",
        "description" : "Get the stored configuration for Claromentis.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/claromentis/{integrationId}/ingest" : {
      "post" : {
        "tags" : [ "integration" ],
        "summary" : "Ingest data from Claromentis",
        "description" : "Ingest data into the system using the Claromentis integration.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/health" : {
      "get" : {
        "tags" : [ "global" ],
        "summary" : "Health check",
        "description" : "Health check",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Health status",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/health"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/license" : {
      "get" : {
        "tags" : [ "global" ],
        "summary" : "License information",
        "description" : "Returns the license information for Zylon. If no license is available, an empty JSON object is returned.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "License information",
            "headers" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/license"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/v1/app/integration/confluence/login" : {
      "get" : {
        "tags" : [ ],
        "summary" : "OpenID login for Confluence",
        "description" : "Initiates the OpenID login flow for the specified provider.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/confluence/{integrationId}/login" : {
      "get" : {
        "tags" : [ ],
        "summary" : "OpenID login for Confluence",
        "description" : "Initiates the OpenID login flow for the specified provider.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/confluence/{integrationId}/refresh_token" : {
      "post" : {
        "tags" : [ ],
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/confluence/callback" : {
      "get" : {
        "tags" : [ ],
        "summary" : "OpenID callback for Confluence",
        "description" : "Handles the OpenID callback after authentication with the specified provider.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/sharepoint/login" : {
      "get" : {
        "tags" : [ ],
        "summary" : "OpenID login for SharePoint",
        "description" : "Initiates the OpenID login flow for the specified provider.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/sharepoint/{integrationId}/login" : {
      "get" : {
        "tags" : [ ],
        "summary" : "OpenID login for SharePoint",
        "description" : "Initiates the OpenID login flow for the specified provider.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/sharepoint/{integrationId}/refresh_token" : {
      "post" : {
        "tags" : [ ],
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    },
    "/v1/app/integration/sharepoint/callback" : {
      "get" : {
        "tags" : [ ],
        "summary" : "OpenID callback for SharePoint",
        "description" : "Handles the OpenID callback after authentication with the specified provider.",
        "parameters" : [ ],
        "responses" : { },
        "deprecated" : false
      }
    }
  },
  "components" : {
    "schemas" : {
      "ai.zylon.backend.server.app.account.LoginWithCredentialsDTO" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "title" : "String"
          },
          "password" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "email", "password" ],
        "title" : "LoginWithCredentialsDTO"
      },
      "ai.zylon.backend.server.app.account.AuthProviderName" : {
        "type" : "string",
        "enum" : [ "Token", "Mock", "AccountSession", "UserSession", "Credentials", "Google", "Microsoft", "Confluence", "SharePoint" ],
        "title" : "AuthProviderName"
      },
      "ai.zylon.backend.server.app.user.UserDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "org_id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "account_id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "profile_picture" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "email" : {
            "type" : "string",
            "title" : "String"
          },
          "job_position_name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "job_position_description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "state" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserState"
          },
          "roles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.backend.core.authorization.RoleName"
            },
            "title" : "ArrayList<RoleName>"
          },
          "created_at" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        },
        "required" : [ "account_id", "created_at", "email", "id", "name", "org_id", "roles", "state" ],
        "title" : "UserDTO"
      },
      "ai.zylon.backend.server.app.user.UserState" : {
        "type" : "string",
        "enum" : [ "Active", "Inactive" ],
        "title" : "UserState"
      },
      "ai.zylon.backend.core.authorization.RoleName" : {
        "type" : "string",
        "enum" : [ "AppGuest", "AppMember", "AppAdmin", "AppOwner", "SuperAdmin", "AccountOwner" ],
        "title" : "RoleName"
      },
      "ai.zylon.backend.server.app.account.AccountDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "email" : {
            "type" : "string",
            "title" : "String"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "given_name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "family_name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "provider" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.account.AuthProviderName"
          },
          "users" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserDTO"
            },
            "title" : "ArrayList<UserDTO>"
          }
        },
        "required" : [ "email", "id", "name", "provider" ],
        "title" : "AccountDTO"
      },
      "ai.zylon.backend.server.app.account.CreateCredentialsAccountDTO" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "title" : "String"
          },
          "password" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "email", "password" ],
        "title" : "CreateCredentialsAccountDTO"
      },
      "ai.zylon.backend.core.authentication.token.ApiTokenDTO" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "hashed_token" : {
            "type" : "string",
            "title" : "String"
          },
          "token_email" : {
            "type" : "string",
            "title" : "String"
          },
          "last_used_at" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "created_at" : {
            "type" : "string",
            "title" : "Instant"
          },
          "valid_until" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          }
        },
        "required" : [ "created_at", "hashed_token", "token_email" ],
        "title" : "ApiTokenDTO"
      },
      "ai.zylon.backend.core.authentication.token.CreateApiTokenDTO" : {
        "type" : "object",
        "properties" : {
          "revoke_existing" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "valid_until" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          }
        },
        "required" : [ "revoke_existing" ],
        "title" : "CreateApiTokenDTO"
      },
      "ai.zylon.backend.core.http.PageDTO" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactDTO"
            },
            "title" : "ArrayList<ArtifactDTO>"
          },
          "next_cursor" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "previous_cursor" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "has_next_page" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "has_previous_page" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "total_count" : {
            "type" : [ "null", "integer" ],
            "format" : "int64",
            "title" : "Long"
          }
        },
        "required" : [ "data", "has_next_page", "has_previous_page" ],
        "title" : "PageDTO"
      },
      "ai.zylon.backend.core.authentication.UserInfo" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "title" : "String"
          },
          "name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "given_name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "family_name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "picture" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "required" : [ "email" ],
        "title" : "UserInfo"
      },
      "ai.zylon.backend.server.app.user.CreateUserDTO" : {
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "role" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.core.authorization.RoleName"
          },
          "user_info" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.backend.core.authentication.UserInfo"
            } ]
          }
        },
        "required" : [ "account_id", "role" ],
        "title" : "CreateUserDTO"
      },
      "ai.zylon.backend.server.app.user.UpdateUserDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "role" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.backend.core.authorization.RoleName"
            } ]
          },
          "profile_picture_file_name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "profile_picture_content_type" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "profile_picture_content_length" : {
            "type" : [ "null", "integer" ],
            "format" : "int64",
            "title" : "Long"
          },
          "profile_picture" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "title" : "UpdateUserDTO"
      },
      "ai.zylon.backend.server.app.project.ProjectDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "goal" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "default_member_role" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.member.ProjectMemberRole"
          },
          "default_role_enabled" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "deadline" : {
            "type" : [ "null", "integer" ],
            "format" : "int64",
            "title" : "Long"
          },
          "visibility" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.ProjectVisibility"
          },
          "member_count" : {
            "type" : [ "null", "integer" ],
            "format" : "int64",
            "title" : "Long"
          },
          "members" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.ProjectMemberDTO"
            },
            "title" : "ArrayList<ProjectMemberDTO>"
          },
          "project_context" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "answer_context" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "is_pinned" : {
            "type" : [ "null", "boolean" ],
            "title" : "Boolean"
          }
        },
        "required" : [ "default_member_role", "default_role_enabled", "id", "name", "visibility" ],
        "title" : "ProjectDTO"
      },
      "ai.zylon.backend.server.app.project.member.ProjectMemberRole" : {
        "type" : "string",
        "enum" : [ "Viewer", "Commenter", "Editor", "Admin", "Owner" ],
        "title" : "ProjectMemberRole"
      },
      "ai.zylon.backend.server.app.project.ProjectVisibility" : {
        "type" : "string",
        "enum" : [ "Public", "Private" ],
        "title" : "ProjectVisibility"
      },
      "ai.zylon.backend.server.app.project.ProjectMemberDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "role" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.member.ProjectMemberRole"
          },
          "user" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserDTO"
          },
          "is_project_member" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        },
        "required" : [ "id", "is_project_member", "role", "user" ],
        "title" : "ProjectMemberDTO"
      },
      "ai.zylon.backend.server.app.project.artifact.ArtifactDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "parent_id" : {
            "type" : [ "null", "string" ],
            "title" : "NodeId"
          },
          "child_count" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          },
          "project_id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "project" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.ProjectDTO"
            } ]
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "type" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactType"
          },
          "source" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactSource"
          },
          "state" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactState"
          },
          "error" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactError"
            } ]
          },
          "ingest_status" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactIngestStatus"
          },
          "ingest_warnings" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactWarning"
            },
            "title" : "ArrayList<ArtifactWarning>"
          },
          "ingest_progress" : {
            "type" : [ "null", "number" ],
            "format" : "float",
            "title" : "Float"
          },
          "has_content" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "content" : {
            "type" : [ "null", "string" ],
            "title" : "Base64ByteArray"
          },
          "raw_content" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "integration_id" : {
            "type" : [ "null", "string" ],
            "title" : "NodeId"
          },
          "external_url" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "config" : {
            "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
          },
          "file_uri" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "artifact_references" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactDTO"
            },
            "title" : "ArrayList<ArtifactDTO>"
          },
          "keep_file_after_ingestion" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "created_by" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserDTO"
            } ]
          },
          "created_at" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "updated_at" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        },
        "required" : [ "child_count", "config", "created_at", "has_content", "id", "ingest_status", "keep_file_after_ingestion", "name", "project_id", "source", "state", "type", "updated_at" ],
        "title" : "ArtifactDTO"
      },
      "ai.zylon.backend.server.app.project.artifact.ArtifactType" : {
        "type" : "string",
        "enum" : [ "InlineText", "Document", "Folder", "Summary", "Composition", "SmartDoc", "Link", "BulkQA" ],
        "title" : "ArtifactType"
      },
      "ai.zylon.backend.server.app.project.artifact.ArtifactSource" : {
        "type" : "string",
        "enum" : [ "User", "SharePoint", "Confluence", "Claromentis", "FileSystem", "Mock" ],
        "title" : "ArtifactSource"
      },
      "ai.zylon.backend.server.app.project.artifact.ArtifactState" : {
        "type" : "string",
        "enum" : [ "Initializing", "Processing", "Draft", "Deleted", "Published", "Unavailable", "Error" ],
        "title" : "ArtifactState"
      },
      "ai.zylon.backend.server.app.project.artifact.ArtifactError" : {
        "type" : "string",
        "enum" : [ "Unknown", "InternalError", "MismatchedType", "InvalidExtension", "MaxNodes", "Malformed", "Encrypted", "NoValidFile", "NoValidNodes" ],
        "title" : "ArtifactError"
      },
      "ai.zylon.backend.server.app.project.artifact.ArtifactIngestStatus" : {
        "type" : "string",
        "enum" : [ "NotApplicable", "NotStarted", "Processing", "Parsing", "Storing", "Done", "Error" ],
        "title" : "ArtifactIngestStatus"
      },
      "ai.zylon.backend.server.app.project.artifact.ArtifactWarning" : {
        "type" : "string",
        "enum" : [ "Unknown", "BigSize", "ExceedsRecommendedPages", "SpecialConfig", "NoContent", "UnprocessableContent", "DescendantHasError" ],
        "title" : "ArtifactWarning"
      },
      "kotlinx.serialization.json.JsonElement" : {
        "type" : "object",
        "properties" : { },
        "title" : "JsonElement"
      },
      "ai.zylon.backend.server.app.integration.UserIntegrationDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "user_id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "org_id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "type" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactSource"
          },
          "provider_data" : {
            "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
          },
          "created_at" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "updated_at" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        },
        "required" : [ "created_at", "id", "org_id", "provider_data", "type", "updated_at", "user_id" ],
        "title" : "UserIntegrationDTO"
      },
      "ai.zylon.backend.server.app.organization.UpdateOrgDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "context" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "clear_context" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "email_regex" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "logo_file_name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "logo_content_type" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "logo_content_length" : {
            "type" : [ "null", "integer" ],
            "format" : "int64",
            "title" : "Long"
          }
        },
        "required" : [ "clear_context" ],
        "title" : "UpdateOrgDTO"
      },
      "ai.zylon.backend.server.app.project.TransferProjectDTO" : {
        "type" : "object",
        "properties" : {
          "old_owner_id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "new_owner_id" : {
            "type" : "string",
            "title" : "NodeId"
          }
        },
        "required" : [ "new_owner_id", "old_owner_id" ],
        "title" : "TransferProjectDTO"
      },
      "ai.zylon.koala.privategpt.ChatRequest" : {
        "type" : "object",
        "properties" : {
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.message.MessageInput"
            },
            "title" : "ArrayList<MessageInput>"
          },
          "stream" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "tools" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.tool.Tool"
            },
            "title" : "ArrayList<Tool>"
          },
          "tool_choice" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.koala.privategpt.ChatRequest.ToolChoice"
            } ]
          },
          "mcp_servers" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.koala.privategpt.McpServer"
            },
            "title" : "ArrayList<McpServer>"
          },
          "response_format" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.koala.privategpt.ChatRequest.ResponseFormat"
            } ]
          },
          "system" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.koala.privategpt.ChatRequest.System"
            } ]
          },
          "thinking" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.koala.privategpt.ChatRequest.Thinking"
            } ]
          },
          "priority" : {
            "type" : [ "null", "integer" ],
            "format" : "int32",
            "title" : "Int"
          },
          "seed" : {
            "type" : [ "null", "integer" ],
            "format" : "int64",
            "title" : "Long"
          },
          "min_p" : {
            "type" : [ "null", "number" ],
            "format" : "double",
            "title" : "Double"
          },
          "top_p" : {
            "type" : [ "null", "number" ],
            "format" : "double",
            "title" : "Double"
          },
          "temperature" : {
            "type" : [ "null", "number" ],
            "format" : "double",
            "title" : "Double"
          },
          "top_k" : {
            "type" : [ "null", "integer" ],
            "format" : "int32",
            "title" : "Int"
          },
          "repetition_penalty" : {
            "type" : [ "null", "number" ],
            "format" : "double",
            "title" : "Double"
          },
          "presence_penalty" : {
            "type" : [ "null", "number" ],
            "format" : "double",
            "title" : "Double"
          },
          "frequency_penalty" : {
            "type" : [ "null", "number" ],
            "format" : "double",
            "title" : "Double"
          },
          "max_tokens" : {
            "type" : [ "null", "integer" ],
            "format" : "int32",
            "title" : "Int"
          }
        },
        "required" : [ "messages", "stream" ],
        "title" : "ChatRequest"
      },
      "ai.zylon.koala.model.message.MessageInput" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "$ref" : "#/components/schemas/ai.zylon.koala.model.message.MessageInputRole"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.message.ContentBlock"
            },
            "title" : "ArrayList<ContentBlock>"
          },
          "_meta" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          }
        },
        "required" : [ "content", "role" ],
        "title" : "MessageInput"
      },
      "ai.zylon.koala.model.message.MessageInputRole" : {
        "type" : "string",
        "enum" : [ "system", "user", "assistant", "tool" ],
        "title" : "MessageInputRole"
      },
      "ai.zylon.koala.model.message.ContentBlock" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/image"
        }, {
          "$ref" : "#/components/schemas/source"
        }, {
          "$ref" : "#/components/schemas/tldr"
        }, {
          "$ref" : "#/components/schemas/text"
        }, {
          "$ref" : "#/components/schemas/thinking"
        }, {
          "$ref" : "#/components/schemas/tool_result"
        }, {
          "$ref" : "#/components/schemas/tool_use"
        } ],
        "title" : "ContentBlock"
      },
      "image" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "string",
            "title" : "String"
          },
          "mime_type" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "start_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "stop_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "_meta" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          }
        },
        "required" : [ "data" ],
        "title" : "image"
      },
      "source" : {
        "type" : "object",
        "properties" : {
          "sources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.message.PGPTSource"
            },
            "title" : "ArrayList<PGPTSource>"
          },
          "start_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "stop_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "_meta" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          }
        },
        "required" : [ "sources" ],
        "title" : "source"
      },
      "ai.zylon.koala.model.message.PGPTSource" : {
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string",
            "title" : "String"
          },
          "id" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "score" : {
            "type" : [ "null", "number" ],
            "format" : "double",
            "title" : "Double"
          },
          "document" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.message.PGPTSource.Document"
            } ]
          },
          "text" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "content_type" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "previous_texts" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "ArrayList<String>"
          },
          "next_texts" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "ArrayList<String>"
          },
          "metadata" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.message.PGPTSource.SourceMetadata"
            } ]
          }
        },
        "required" : [ "object" ],
        "title" : "PGPTSource"
      },
      "ai.zylon.koala.model.message.PGPTSource.Document" : {
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string",
            "title" : "String"
          },
          "artifact" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "doc_metadata" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.message.PGPTSource.DocMetadata"
            } ]
          }
        },
        "required" : [ "object" ],
        "title" : "Document"
      },
      "ai.zylon.koala.model.message.PGPTSource.DocMetadata" : {
        "type" : "object",
        "properties" : {
          "file_name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "file_type" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "title" : "DocMetadata"
      },
      "ai.zylon.koala.model.message.PGPTSource.SourceMetadata" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "page" : {
            "type" : [ "null", "integer" ],
            "format" : "int32",
            "title" : "Int"
          },
          "shorter_id" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "title" : "SourceMetadata"
      },
      "tldr" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.message.ContentBlock"
            },
            "title" : "ArrayList<ContentBlock>"
          },
          "start_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "stop_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "_meta" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          }
        },
        "required" : [ "content" ],
        "title" : "tldr"
      },
      "text" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string",
            "title" : "String"
          },
          "citations" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.message.PGPTCitation"
            },
            "title" : "ArrayList<PGPTCitation>"
          },
          "start_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "stop_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "_meta" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          }
        },
        "required" : [ "text" ],
        "title" : "text"
      },
      "ai.zylon.koala.model.message.PGPTCitation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "index" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "artifact_id" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "source_id" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          }
        },
        "title" : "PGPTCitation"
      },
      "thinking" : {
        "type" : "object",
        "properties" : {
          "thinking" : {
            "type" : "string",
            "title" : "String"
          },
          "citations" : {
            "type" : [ "null", "array" ],
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.message.PGPTCitation"
            },
            "title" : "ArrayList<PGPTCitation>"
          },
          "start_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "stop_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "_meta" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          }
        },
        "required" : [ "thinking" ],
        "title" : "thinking"
      },
      "tool_result" : {
        "type" : "object",
        "properties" : {
          "tool_use_id" : {
            "type" : "string",
            "title" : "String"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.message.ContentBlock"
            },
            "title" : "ArrayList<ContentBlock>"
          },
          "is_error" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "start_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "stop_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "_meta" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          }
        },
        "required" : [ "content", "is_error", "tool_use_id" ],
        "title" : "tool_result"
      },
      "tool_use" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "title" : "String"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "input" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          },
          "start_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "stop_timestamp" : {
            "type" : [ "null", "string" ],
            "title" : "Instant"
          },
          "_meta" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          }
        },
        "required" : [ "id", "input", "name" ],
        "title" : "tool_use"
      },
      "ai.zylon.koala.model.tool.Tool" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "type" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "inputSchema" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.koala.model.tool.Tool.Input"
            } ]
          }
        },
        "required" : [ "name" ],
        "title" : "Tool"
      },
      "ai.zylon.koala.model.tool.Tool.Input" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          },
          "required" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "ArrayList<String>"
          },
          "type" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "properties", "type" ],
        "title" : "Input"
      },
      "ai.zylon.koala.privategpt.ChatRequest.ToolChoice" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "title" : "String"
          },
          "name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "disable_parallel_tool_use" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        },
        "required" : [ "disable_parallel_tool_use", "type" ],
        "title" : "ToolChoice"
      },
      "ai.zylon.koala.privategpt.McpServer" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "title" : "String"
          },
          "name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "authorization_token" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "tool_configuration" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.koala.privategpt.McpServer.ToolConfiguration"
            } ]
          },
          "type" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "type", "url" ],
        "title" : "McpServer"
      },
      "ai.zylon.koala.privategpt.McpServer.ToolConfiguration" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "allowed_tools" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "ArrayList<String>"
          }
        },
        "required" : [ "enabled" ],
        "title" : "ToolConfiguration"
      },
      "ai.zylon.koala.privategpt.ChatRequest.ResponseFormat" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/ai.zylon.koala.privategpt.ChatRequest.ResponseFormat.ResponseFormatType"
          },
          "json_schema" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          }
        },
        "required" : [ "type" ],
        "title" : "ResponseFormat"
      },
      "ai.zylon.koala.privategpt.ChatRequest.ResponseFormat.ResponseFormatType" : {
        "type" : "string",
        "enum" : [ "text", "json_schema" ],
        "title" : "ResponseFormatType"
      },
      "ai.zylon.koala.privategpt.ChatRequest.System" : {
        "type" : "object",
        "properties" : {
          "use_default_prompt" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "text" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "citations" : {
            "$ref" : "#/components/schemas/ai.zylon.koala.privategpt.ChatRequest.System.Citations"
          }
        },
        "required" : [ "citations", "use_default_prompt" ],
        "title" : "System"
      },
      "ai.zylon.koala.privategpt.ChatRequest.System.Citations" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        },
        "required" : [ "enabled" ],
        "title" : "Citations"
      },
      "ai.zylon.koala.privategpt.ChatRequest.Thinking" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        },
        "required" : [ "enabled" ],
        "title" : "Thinking"
      },
      "ai.zylon.backend.server.app.project.ProjectChatDTO" : {
        "type" : "object",
        "properties" : {
          "artifact_ids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "title" : "NodeId"
            },
            "title" : "ArrayList<NodeId>"
          },
          "all_artifacts" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "pgpt" : {
            "$ref" : "#/components/schemas/ai.zylon.koala.privategpt.ChatRequest"
          }
        },
        "required" : [ "all_artifacts", "artifact_ids", "pgpt" ],
        "title" : "ProjectChatDTO"
      },
      "ai.zylon.backend.server.app.project.CreateProjectMemberDTO" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "role" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.member.ProjectMemberRole"
          }
        },
        "required" : [ "role", "user_id" ],
        "title" : "CreateProjectMemberDTO"
      },
      "ai.zylon.backend.server.app.project.AddProjectMembersDTO" : {
        "type" : "object",
        "properties" : {
          "members" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.CreateProjectMemberDTO"
            },
            "title" : "ArrayList<CreateProjectMemberDTO>"
          }
        },
        "required" : [ "members" ],
        "title" : "AddProjectMembersDTO"
      },
      "ai.zylon.backend.server.app.project.UpdateProjectMemberDTO" : {
        "type" : "object",
        "properties" : {
          "user_id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "role" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.member.ProjectMemberRole"
            } ]
          },
          "is_pinned" : {
            "type" : [ "null", "boolean" ],
            "title" : "Boolean"
          }
        },
        "required" : [ "user_id" ],
        "title" : "UpdateProjectMemberDTO"
      },
      "ai.zylon.backend.server.app.project.UpdateProjectMembersDTO" : {
        "type" : "object",
        "properties" : {
          "members" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.UpdateProjectMemberDTO"
            },
            "title" : "ArrayList<UpdateProjectMemberDTO>"
          }
        },
        "required" : [ "members" ],
        "title" : "UpdateProjectMembersDTO"
      },
      "ai.zylon.backend.server.app.project.interaction.InteractionIncludeFields" : {
        "type" : "string",
        "enum" : [ "User" ],
        "title" : "InteractionIncludeFields"
      },
      "ai.zylon.backend.server.app.agent.AgentType" : {
        "type" : "string",
        "enum" : [ "Default", "ProjectDeepResearch" ],
        "title" : "AgentType"
      },
      "ai.zylon.backend.server.app.project.interaction.CreateInteractionDTO" : {
        "type" : "object",
        "properties" : {
          "thread_id" : {
            "type" : [ "null", "string" ],
            "title" : "NodeId"
          },
          "all_artifacts" : {
            "type" : [ "null", "boolean" ],
            "title" : "Boolean"
          },
          "artifact_ids" : {
            "type" : [ "null", "array" ],
            "items" : {
              "type" : "string",
              "title" : "NodeId"
            },
            "title" : "ArrayList<NodeId>"
          },
          "pgpt" : {
            "$ref" : "#/components/schemas/ai.zylon.koala.privategpt.ChatRequest"
          },
          "agent" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.agent.AgentType"
          }
        },
        "required" : [ "agent", "pgpt" ],
        "title" : "CreateInteractionDTO"
      },
      "ai.zylon.backend.server.app.project.thread.ThreadState" : {
        "type" : "string",
        "enum" : [ "Active", "Deleted" ],
        "title" : "ThreadState"
      },
      "ai.zylon.backend.server.app.project.thread.ThreadIncludeFields" : {
        "type" : "string",
        "enum" : [ "User" ],
        "title" : "ThreadIncludeFields"
      },
      "ai.zylon.backend.server.app.project.thread.ThreadVisibility" : {
        "type" : "string",
        "enum" : [ "Public", "Private" ],
        "title" : "ThreadVisibility"
      },
      "ai.zylon.backend.server.app.project.thread.UpdateThreadDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "visibility" : {
            "oneOf" : [ {
              "type" : "null"
            }, {
              "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.thread.ThreadVisibility"
            } ]
          }
        },
        "title" : "UpdateThreadDTO"
      },
      "ai.zylon.backend.server.app.project.thread.CreateThreadDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "visibility" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.thread.ThreadVisibility"
          }
        },
        "required" : [ "name", "visibility" ],
        "title" : "CreateThreadDTO"
      },
      "ai.zylon.backend.server.app.QueryOrderBy" : {
        "type" : "string",
        "enum" : [ "Alphabetical" ],
        "title" : "QueryOrderBy"
      },
      "org.jetbrains.exposed.sql.SortOrder" : {
        "type" : "string",
        "enum" : [ "ASC", "DESC", "ASC_NULLS_FIRST", "DESC_NULLS_FIRST", "ASC_NULLS_LAST", "DESC_NULLS_LAST" ],
        "title" : "SortOrder"
      },
      "ai.zylon.backend.server.app.project.artifact.CreateArtifactDTO" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactType"
          },
          "source" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.artifact.ArtifactSource"
          },
          "name" : {
            "type" : "string",
            "title" : "String"
          },
          "parent_id" : {
            "type" : [ "null", "string" ],
            "title" : "NodeId"
          },
          "integration_id" : {
            "type" : [ "null", "string" ],
            "title" : "NodeId"
          },
          "external_url" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "raw_content" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "keep_file_after_ingestion" : {
            "type" : "boolean",
            "title" : "Boolean"
          },
          "config" : {
            "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
          }
        },
        "required" : [ "config", "keep_file_after_ingestion", "name", "source", "type" ],
        "title" : "CreateArtifactDTO"
      },
      "ai.zylon.backend.server.app.project.artifact.UpdateArtifactDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "parent_id" : {
            "type" : [ "null", "string" ],
            "title" : "NodeId"
          },
          "external_url" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "config" : {
            "type" : [ "null", "object" ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/kotlinx.serialization.json.JsonElement"
            },
            "title" : "JsonObject<String,JsonElement>"
          },
          "description" : {
            "type" : [ "null", "string" ],
            "title" : "String"
          },
          "content" : {
            "type" : [ "null", "string" ],
            "title" : "Base64ByteArray"
          }
        },
        "title" : "UpdateArtifactDTO"
      },
      "ai.zylon.backend.server.app.ApplicationFeature" : {
        "type" : "string",
        "enum" : [ "Summary", "Composition", "AnswerHub", "CompositionSection" ],
        "title" : "ApplicationFeature"
      },
      "ai.zylon.backend.server.app.feedback.CreateFeedbackDTO" : {
        "type" : "object",
        "properties" : {
          "target_id" : {
            "type" : "string",
            "title" : "NodeId"
          },
          "feature" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.ApplicationFeature"
          },
          "score" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Int"
          }
        },
        "required" : [ "feature", "score", "target_id" ],
        "title" : "CreateFeedbackDTO"
      },
      "ai.zylon.backend.server.app.audit.AuditQueryIncludeFields" : {
        "type" : "string",
        "enum" : [ "User" ],
        "title" : "AuditQueryIncludeFields"
      },
      "ai.zylon.backend.server.app.analytics.AnalyticsTotalsDTO" : {
        "type" : "object",
        "properties" : {
          "projects_total" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "threads_total" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "interactions_total" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "agent_flows_total" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "uploaded_artifacts_total" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        },
        "required" : [ "agent_flows_total", "interactions_total", "projects_total", "threads_total", "uploaded_artifacts_total" ],
        "title" : "AnalyticsTotalsDTO"
      },
      "ai.zylon.backend.server.app.analytics.RankingActiveProjectDTO" : {
        "type" : "object",
        "properties" : {
          "project" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.project.ProjectDTO"
          },
          "interactions_created" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "agent_flows_created" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        },
        "required" : [ "agent_flows_created", "interactions_created", "project" ],
        "title" : "RankingActiveProjectDTO"
      },
      "ai.zylon.backend.server.app.analytics.RankingActiveUsersDTO" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.server.app.user.UserDTO"
          },
          "interactions_created" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          },
          "agent_flows_created" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        },
        "required" : [ "agent_flows_created", "interactions_created", "user" ],
        "title" : "RankingActiveUsersDTO"
      },
      "ai.zylon.backend.server.app.analytics.TimeseriesDTO" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "title" : "LocalDate"
          },
          "value" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Long"
          }
        },
        "required" : [ "date", "value" ],
        "title" : "TimeseriesDTO"
      },
      "ai.zylon.backend.server.app.miscellaneous.ResourceIsSafeToModifyDTO" : {
        "type" : "object",
        "properties" : {
          "has_linked_artifacts" : {
            "type" : "boolean",
            "title" : "Boolean"
          }
        },
        "required" : [ "has_linked_artifacts" ],
        "title" : "ResourceIsSafeToModifyDTO"
      },
      "health" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "title" : "String"
          },
          "uptime" : {
            "type" : "string",
            "title" : "String"
          },
          "commit" : {
            "type" : "string",
            "title" : "String"
          }
        },
        "required" : [ "commit", "status", "uptime" ],
        "title" : "health"
      },
      "ai.zylon.backend.core.license.LicenseProvider" : {
        "type" : "string",
        "enum" : [ "Zylon", "Replicated" ],
        "title" : "LicenseProvider"
      },
      "license" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "title" : "String"
          },
          "email" : {
            "type" : "string",
            "title" : "String"
          },
          "valid_until" : {
            "type" : "string",
            "title" : "Instant"
          },
          "product" : {
            "type" : "string",
            "title" : "String"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "title" : "String"
            },
            "title" : "LinkedHashMap<String,String>"
          },
          "provider" : {
            "$ref" : "#/components/schemas/ai.zylon.backend.core.license.LicenseProvider"
          }
        },
        "required" : [ "email", "id", "metadata", "product", "provider", "valid_until" ],
        "title" : "license"
      }
    },
    "examples" : { }
  },
  "webhooks" : { }
}